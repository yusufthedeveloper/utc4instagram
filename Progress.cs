using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using System.Data.SQLite;
using NUnit.Framework;
using System.Data;

namespace User_Tag_Challenge_for_Instagram
{
    // Generated by Selenium IDE

    [TestFixture]
    public class Progress
    {
        
        private bool IsElementPresent(By by)
        {
            try
            {
                driver.FindElement(by);
                return true;
            }
            catch (NoSuchElementException)
            {
                return false;
            }
        }

        private IWebDriver driver;
        public IDictionary<string, object> vars { get; private set; }
        private IJavaScriptExecutor js;
        [SetUp]
        public void SetUp()
        {
            ChromeDriverService service = ChromeDriverService.CreateDefaultService();
            service.HideCommandPromptWindow = true;
            driver = new ChromeDriver(service       );
            js = (IJavaScriptExecutor)driver;
            vars = new Dictionary<string, object>();
        }
        [TearDown]
        public void TearDown()
        {
            driver.Quit();
        }
        public static String[] Texts;
        public static String[] Thetexts;

        SQLiteConnection con;
        SQLiteConnection conn;
        SQLiteDataAdapter da;
        SQLiteCommand cmd;
        SQLiteCommand cmad;
        DataSet ds;


        [Test]
        public void Repeat()
        {
            IList<IWebElement> all = driver.FindElements(By.ClassName("C4VMK"));
            String[] allText = new String[all.Count];
            int i = 0;
            foreach (IWebElement e in all)
            {
                string commSplit = e.FindElement(By.TagName("span")).Text;
                string[] textSplit = commSplit.Split(' ');
                Thetexts = textSplit;
                Form1 form1 = new Form1();
                allText[i++] = "Time: " + e.FindElement(By.ClassName("FH9sR")).Text + " User: " + e.FindElement(By.ClassName("_6lAjh")).Text + " Comment: " + e.FindElement(By.TagName("span")).Text;
                Texts = allText;
                string status = "already_db";
                foreach (string Thread in Thetexts)
                {
                    if (Thread.StartsWith("@"))
                    { con = new SQLiteConnection("Data Source=UTC.db;Version=3;");
                        cmd = new SQLiteCommand();
                        con.Close();
                        con.Open();
                        cmd.Connection = con;
                        cmd.CommandText = "SELECT count(*) FROM TaggedUsers WHERE TaggedUser='" + Thread + "'";
                        int count = Convert.ToInt32(cmd.ExecuteScalar());
                        if (count == 0)
                        {
                            string The = "@" + e.FindElement(By.ClassName("_6lAjh")).Text;
                            cmd.CommandText = "insert into TaggedUsers(TaggedBy,TaggedUser) values ('" + The + "','" + Thread + "')";
                            cmd.ExecuteNonQuery();
                            status = "added_db";

                            cmd.CommandText = "SELECT count(*) FROM Leaderboard WHERE UserName='" + The + "'";
                            int kant = Convert.ToInt32(cmd.ExecuteScalar());
                            con.Close();
                            if (kant == 0)
                            {
                                cmd.Connection = con;
                                con.Open();
                                int counter = 1;
                                cmd.CommandText = "insert into Leaderboard(UserName,TaggedUserCount) values ('" + The + "','" + counter + "')";
                                cmd.ExecuteNonQuery();
                                con.Close();
                            }
                            else
                            {
                                cmd = new SQLiteCommand("SELECT TaggedUserCount FROM Leaderboard WHERE UserName = '" + The + "'", con);
                                con.Open();
                                SQLiteDataReader reader = null;
                                reader = cmd.ExecuteReader();
                                reader.Read();
                                int couner = reader.GetInt32(0);
                                couner++;
                                reader.Close();
                                con.Close();
                                cmad = new SQLiteCommand("update Leaderboard set TaggedUserCount = '" + couner + "' where UserName = '" + The + "'", conn);
                                conn = new SQLiteConnection("Data Source=UTC.db;Version=3;");
                                cmad.Connection = conn;
                                conn.Open();
                                cmad.ExecuteNonQuery();
                                conn.Close();
                            }
                        }
                        string There = "@" + e.FindElement(By.ClassName("_6lAjh")).Text;
                        cmd.CommandText = "select count(*) from TaggedUsers where TaggedUser = '" + There + "';";
                        cmd.CommandType = CommandType.Text;

                        Console.WriteLine(e.FindElement(By.ClassName("_6lAjh")).Text + ":" + Thread + ":" + status);
                    }
                }
            }
        }
        public void DropAll()
        {
            con = new SQLiteConnection("Data Source=UTC.db;Version=3;");
            cmd = new SQLiteCommand();
            con.Open();
            cmd.Connection = con;
            cmd.CommandText = "DELETE FROM Leaderboard";
            cmd.ExecuteNonQuery();
            cmd.CommandText = "DELETE FROM TaggedUsers";
            cmd.ExecuteNonQuery();
            cmd.CommandText = "DELETE FROM sqlite_sequence";
            cmd.ExecuteNonQuery();
            con.Close();

        }
        public void CheckLB()
        {
            con = new SQLiteConnection("Data Source=UTC.db;Version=3;");
            da = new SQLiteDataAdapter("Select * From Leaderboard", con);
            ds = new DataSet();
            con.Open();
            da.Fill(ds, "Leaderboard");
            DataTable lbrd;
            lbrd = ds.Tables["Leaderboard"];
            lbrd.Columns["TaggedUserCount"].AutoIncrement = true;
            Form1.lbrd = lbrd;
            con.Close();
        }

        public void Run()
        {
            driver.Navigate().GoToUrl(Form1.ucc);
            System.Threading.Thread.Sleep(500);
             var clickclose = driver.FindElement(By.XPath("//div[@id='react-root']/section/nav/div[2]/div/div/div[3]/div/div/div/button/span"));
            clickclose.Click();
            Closetray();
        }
        public void click() {

            if (IsElementPresent(By.XPath("//div[@id='react-root']/section/main/div/div/article/div[3]/div/ul/li/div/button/span")))
            {
                //do if exists
                var loadmre = driver.FindElement(By.XPath("//div[@id='react-root']/section/main/div/div/article/div[3]/div/ul/li/div/button/span"));
                loadmre.Click();
            }
            else
            {
                //do if does not exists
            }
            
         
        }
        public void Closetray() { 
            click();
            Repeat();
        }
    }
}